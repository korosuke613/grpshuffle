name: CI
on: pull_request

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  go-fmt:
    name: Check go format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: diff -u <(echo -n) <(go fmt ./...)

  go-lint:
    name: Lint go
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        env:
          GOLANGCILINT_VERSION: v1.53.3
        with:
          version: ${{ env.GOLANGCILINT_VERSION }}

  go-test:
    name: Test go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go test ./... -v

  renovate-lint:
    name: Validate Renovate Config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: docker run --rm --entrypoint "bash" -v "${PWD}":/work docker.io/renovate/renovate -c 'cd /work && renovate-config-validator'

  action-lint:
    name: Lint GitHub Actions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-actionlint@v1

  e2e-test:
    name: End-to-End testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Install Dockerize
        env:
          DOCKERIZE_VERSION: v0.6.1
        run: |
          wget "https://github.com/jwilder/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz"
          sudo tar -C /usr/local/bin -xzvf "dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz"
          rm "dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz"

      - run: make

      - name: Launch server
        run: |
          ./grpshuffle_server &
          dockerize -wait tcp://localhost:13333          

      - name: Test health
        run: ./grpshuffle_client health --no-tls --host localhost --port 13333 | jq --exit-status

      - name: Test shuffle
        run: ./grpshuffle_client shuffle --no-tls --host localhost --port 13333 --divide 2 chikin-nanban karamen mango jidori | jq --exit-status
