{
  // Validate on local machine.
  // docker run --rm --entrypoint "bash" -v $PWD:/work docker.io/renovate/renovate:latest -c 'cd /work && renovate-config-validator'
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    ":label(renovate)", // https://docs.renovatebot.com/presets-default/#labelarg0
    ":timezone(Asia/Tokyo)",
    ":enableVulnerabilityAlertsWithLabel(security)", // Raise PR when vulnerability alerts are detected with label security.
    ":semanticCommitTypeAll(chore)", // If semantic commits detected, use semantic commit type chore for all
    "schedule:monthly"
  ],

  "dependencyDashboard": true,
  "dependencyDashboardLabels": ["renovate"],

  "separateMajorMinor": false,

  regexManagers: [
    {
      fileMatch: ["^.tool-versions$"],
      matchStrings: ["golang (?<currentValue>\\d+\\.\\d+\\.\\d+)"],
      datasourceTemplate: "golang-version",
      depNameTemplate: "golang-version"
    },
    {
      fileMatch: ["^.github/workflows/ci.yaml$"],
      matchStrings: ["GOLANGCILINT_VERSION: v(?<currentValue>\\d+\\.\\d+\\.\\d+)"],
      datasourceTemplate: "github-releases",
      depNameTemplate: "golangci/golangci-lint",
    }
  ],

  "packageRules": [
    {
      "groupName": "go",
      "automerge": true,
      "matchManagers": ["gomod"],
      "postUpdateOptions": [
        "gomodTidy"
      ]
    },
    {
      groupName: "golang-version",
      automerge: true,
      matchManagers: ["regex"],
      matchPackageNames: ["golang-version"],
    },
    {
      groupName: "golang-version",
      automerge: true,
      matchManagers: ["gomod"],
      matchPackageNames: ["golang-version"],
    },
    {
      groupName: "golangci-lint",
      automerge: true,
      matchManagers: ["regex"],
      matchPackageNames: ["golangci/golangci-lint"]
    },
    {
      matchManagers: ["github-actions"],
      groupName: "github-actions",
      automerge: true,
    }
  ]
}
